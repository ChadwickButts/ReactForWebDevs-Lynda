{"version":3,"sources":["directory.js"],"names":["Person","props","person","name","title","img","bio","People","people","map","id","enter","enterActive","exit","exitActive","Filters","updateName","evt","updateFormState","target","value","updateTitle","updateIntern","checked","resetForm","currentName","currentTitle","isIntern","Directory","state","window","LMDirectory","bind","spec","setState","updatePeopleList","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function () {\n  \"use strict\";\n\n  \n  function Person(props) {\n    return (\n      <div className=\"person\">\n        <h3>\n          {props.person.name}, {props.person.title}\n        </h3>\n\n        <p>\n          <img className=\" size-medium alignright\" src={props.person.img} alt={props.person.name} width=\"300\" height=\"300\" sizes=\"(max-width: 300px) 100vw, 300px\" />\n          {props.person.bio}\n        </p>\n      </div>\n    );\n  }\n\n  function People(props) {\n    return (\n      <div className=\"results\">\n        <ReactTransitionGroup.TransitionGroup>\n          {\n            props.people.map(function(person) {\n              return (\n                <ReactTransitionGroup.CSSTransition key={person.id} classNames={\n                  {\n                    enter: 'animated',\n                    enterActive: 'fadeIn',\n                    exit: 'animated',\n                    exitActive: 'fadeOut'\n                  }\n                } timeout={1000}>\n                  <Person person={person} />\n                </ReactTransitionGroup.CSSTransition>\n              );\n            })\n          }\n        </ReactTransitionGroup.TransitionGroup>\n      </div>\n    );\n  }\n\n  function Filters(props) {\n\n    function updateName(evt) {\n      props.updateFormState({\"currentName\": evt.target.value});\n    }\n\n    function updateTitle(evt) {\n      props.updateFormState({\"currentTitle\": evt.target.value});\n    }\n\n    function updateIntern(evt) {\n      props.updateFormState({\"isIntern\": evt.target.checked});\n    }\n\n    function resetForm() {\n      props.updateFormState({\n        \"currentName\": \"\",\n        \"currentTitle\": \"\",\n        \"isIntern\": false\n      });\n    }\n\n    return (\n      <form action=\"\" id=\"directory-filters\" >\n          <div className=\"group\">\n            <label htmlFor=\"person-name\">Name:</label>\n            <input type=\"text\" name=\"person_name\" placeholder=\"Name of employee\" id=\"person-name\" value={props.currentName} onChange={updateName}/> \n          </div>\n          <div className=\"group\">\n              <label htmlFor=\"person-title\">Job Title:</label>\n              <select name=\"person-title\" id=\"person-title\" value={props.currentTitle} onChange={updateTitle}>\n                <option value=\"\">- Select -</option>\n                <option value=\"architect\">Architect</option>\n                <option value=\"designer\">Designer</option>\n                <option value=\"contractor\">Contractor</option>\n                <option value=\"staff\">Support Staff</option>\n              </select>\n          </div>\n          <div className=\"group\">\n              <label><input type=\"checkbox\" value=\"1\" checked={props.isIntern} onChange={updateIntern}/> Intern</label>\n          </div>\n          <div className=\"group\">\n            <button type=\"button\" onClick={resetForm}>Reset</button>\n          </div>\n      </form>\n    );\n  }\n\n  class Directory extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        people: window.LMDirectory.people,\n        currentName: \"\",\n        currentTitle: \"\",\n        isIntern: false\n      };\n\n      this.updateFormState = this.updateFormState.bind(this);\n    }\n\n    updateFormState(spec) {\n      this.setState(\n        spec, this.updatePeopleList\n      );\n    }\n\n    updatePeopleList() {\n      var filteredPeople = window.LMDirectory.people.filter(\n        function(person) {\n          return (\n            person.intern === this.state.isIntern &&\n            (this.state.currentName === \"\" ||\n              person.name.toLowerCase().indexOf(this.state.currentName.toLowerCase()) !==\n                -1) &&\n            (this.state.currentTitle === \"\" || person.title_cat === this.state.currentTitle)\n          );\n        }.bind(this)\n      );\n  \n      this.setState({\n        people: filteredPeople\n      });\n    }\n\n    render() {\n      return (\n        <div className=\"company-directory\">\n          <h2>\n            Company Directory\n          </h2>\n          <p>Learn more about each person at Leaf & Mortar in this company directory.</p>\n\n          <Filters currentName={this.state.currentName} currentTitle={this.state.currentTitle} isIntern={this.state.isIntern} updateFormState={this.updateFormState}/>\n          <People people={this.state.people} />\n        </div>\n      );\n    }\n  }\n\n  ReactDOM.render(<Directory />, document.getElementById('directory-root'));\n})();\n"]}